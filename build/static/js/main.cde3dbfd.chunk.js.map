{"version":3,"sources":["firebase.js","components/SidebarChat.js","StateProvide.js","components/Sidebar.js","components/Dropdown1.js","components/Chat.js","components/DefaultChat.js","reduser.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","AddnewChat","useState","seed","setseed","Messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","className","onClick","roomname","prompt","add","to","Avatar","src","message","startsWith","StateContext","createContext","StateProvider","children","reducer","initialState","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setrooms","search","setsearch","user","photoURL","IconButton","SearchOutlined","onChange","e","target","placeholder","filter","room","toLowerCase","includes","Dropdown1","roomId","useParams","selectfiles","useRef","sendfile","event","a","file","files","match","alert","Convertbase64","base64","displayName","time","FieldValue","serverTimestamp","Promise","myresolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","ref","type","accept","style","display","current","click","Chat","input","setinput","Roomname","setRoomname","state","setState","messagesEndRef","menu","setmenu","scrollIntoView","behavior","scrollToBottom","Date","length","toDate","toUTCString","onEmojiClick","emojiObject","emoji","preventDefault","DefaultChat","actionTypes","action","console","log","Login","dispatch","alt","Button","signInWithPopup","then","catch","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cde3dbfd.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD1u5CWOyvD9x1--SBGEVfBFmUgTDWlsgw\",\r\n    authDomain: \"whatsapp-clone-404a6.firebaseapp.com\",\r\n    projectId: \"whatsapp-clone-404a6\",\r\n    storageBucket: \"whatsapp-clone-404a6.appspot.com\",\r\n    messagingSenderId: \"329626352053\",\r\n    appId: \"1:329626352053:web:efafb5958f353deba4c1fc\",\r\n    measurementId: \"G-G99YWHPSFP\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\nexport default db;","import {Avatar} from \"@material-ui/core\"\r\nimport {useState,useEffect} from \"react\";\r\nimport db from '../firebase'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction SidebarChat({id,name,AddnewChat}) {\r\n    const [seed,setseed] = useState(\"\")\r\n    const [Messages,setMessages] = useState('');\r\n\r\n    useEffect(() => {\r\n        if(id){\r\n            db.collection('rooms').doc(id).collection('messages').orderBy('time','desc').onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            })\r\n        }\r\n    }, [id]);\r\n\r\n\r\n    useEffect(() => {\r\n        setseed(Math.floor(Math.random() * 10000))\r\n    },[])\r\n\r\n    const createChat = ()=>{\r\n        const roomname = prompt('Please Enter name for the chat')\r\n        if (roomname){\r\n            db.collection('rooms').add({\r\n                name:roomname\r\n            })\r\n            \r\n        }\r\n    }\r\n    return !AddnewChat ? (\r\n        <Link to={`/rooms/${id}`}>\r\n            <div className=\"Sidebarchat\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} onClick={()=>{}} />\r\n                <div className=\"SideBarChatInfo\">\r\n                    <h2>{name}</h2>\r\n                    {(Messages[0]?.message.startsWith(\"data:image\")) ?\r\n                        (Messages[0].message = 'Image')\r\n                        :\r\n                        <p>{Messages[0]?.message}</p>\r\n                }\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    ): (\r\n        <div className=\"Sidebarchat\" onClick={createChat}>\r\n            <h2>Add New Chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, {createContext,useContext,useReducer} from 'react'\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({children, reducer, initialState}) => (\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import {Avatar,IconButton} from \"@material-ui/core\"\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport {SearchOutlined} from '@material-ui/icons';\r\nimport SidebarChat from './SidebarChat';\r\nimport {useState,useEffect} from \"react\";\r\nimport db from '../firebase'\r\nimport { useStateValue } from '../StateProvide';\r\n\r\nconst Sidebar = () => {\r\n    const [rooms,setrooms] = useState([])\r\n    const [search,setsearch] = useState('')\r\n    const [{user},dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        db.collection('rooms').onSnapshot(snapshot =>(\r\n            setrooms(snapshot.docs.map(doc => \r\n                ({\r\n                    id:doc.id,\r\n                    data:doc.data()\r\n                })\r\n                ))\r\n        ))\r\n    },[])\r\n    return (\r\n        <div className=\"sidebar \">\r\n            <div className=\"sidebar-header\">\r\n                <Avatar src={user?.photoURL}/>\r\n                <div className=\"sidebar_headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar_search\">\r\n                <div className=\"sidebar_searchContainer\">\r\n                    <SearchOutlined />\r\n                    <input value={search} onChange={(e) => setsearch(e.target.value)} placeholder=\"Search or Start New Chat\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar-chat\">\r\n                <SidebarChat AddnewChat />\r\n                {(search) ? \r\n                    rooms.filter(room => room.data.name.toLowerCase().includes(search)).map(room => (\r\n                        <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n                    ))\r\n                    :\r\n                    rooms.map(room => (\r\n                        <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import {useRef} from \"react\";\r\nimport db from '../firebase'\r\nimport {useParams} from \"react-router-dom\"\r\nimport { useStateValue } from '../StateProvide';\r\nimport firebase from \"firebase\" \r\n\r\nfunction Dropdown1() {\r\n    const {roomId} = useParams();\r\n    const selectfiles = useRef(null)\r\n    const [{user},dispatch] = useStateValue();\r\n\r\n    const imageupload = () =>{\r\n        selectfiles.current.click()\r\n    }\r\n    const sendfile = async (event) => {\r\n        let file = event.target.files[0];\r\n        if(!file.name.match(/.(jpg|jpeg|png|gif)$/i)){\r\n            alert('Only Image file allowed')\r\n        }\r\n        else{\r\n            const base64 = await Convertbase64(file)\r\n            db.collection('rooms').doc(roomId).collection('messages').add({\r\n                message: base64,\r\n                name: user.displayName,\r\n                time: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n    }\r\n\r\n    const Convertbase64 = (file) => {\r\n        return new Promise((myresolve, reject) =>{\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n\r\n            fileReader.onload = ()=>{\r\n                myresolve(fileReader.result)\r\n            };\r\n\r\n            fileReader.onerror = (error)=>{\r\n                reject(error)\r\n            };\r\n        });\r\n        \r\n    };\r\n\r\n    return (\r\n        <div className=\"helo\">\r\n            <input ref={selectfiles} type=\"file\" accept=\"image/*\" onChange={sendfile} style={{display:\"none\"}} />\r\n            <div className=\"menu\">\r\n                <button onClick={imageupload}> Image </button>\r\n                <button> Document </button>\r\n                <button> Camera </button>\r\n                <button> Video </button>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropdown1\r\n","import {Avatar,IconButton} from '@material-ui/core'\r\nimport {useState,useEffect,useRef} from \"react\";\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport EmojiEmotionsOutlinedIcon from '@material-ui/icons/EmojiEmotionsOutlined';\r\nimport MicOutlinedIcon from '@material-ui/icons/MicOutlined';\r\nimport {useParams} from \"react-router-dom\"\r\nimport db from '../firebase'\r\nimport { useStateValue } from '../StateProvide';\r\nimport firebase from \"firebase\" \r\nimport Picker from 'emoji-picker-react'\r\nimport Dropdown1 from './Dropdown1'\r\nimport StopTwoToneIcon from '@material-ui/icons/StopTwoTone';\r\n\r\n\r\n\r\n\r\n\r\nfunction Chat() {\r\n    const [seed,setseed] = useState(\"\");\r\n    const [input,setinput] = useState(\"\");\r\n    const {roomId} = useParams();\r\n    const [Roomname,setRoomname] = useState(\"\");\r\n    const [Messages,setMessages] = useState([]);\r\n    const [{user},dispatch] = useStateValue();\r\n    const [state, setState] = useState(false)\r\n    const messagesEndRef = useRef(null)\r\n    const [menu, setmenu] = useState(false)\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        if (roomId){\r\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot => (\r\n                setRoomname(snapshot.data().name))   \r\n            )\r\n\r\n            db.collection('rooms').doc(roomId).collection('messages').orderBy('time','asc').onSnapshot(snapshot => (\r\n                setMessages(snapshot.docs.map(doc => doc.data()))\r\n            ))\r\n        }\r\n    },[roomId])\r\n\r\n    useEffect(() => {\r\n        setseed(Math.floor(Math.random() * 10000))\r\n    },[roomId])\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        setinput('')\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message: input,\r\n            name: user.displayName,\r\n            time: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n    }\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n      }\r\n    useEffect(() => {\r\n        scrollToBottom()\r\n    }, [Messages]);  \r\n\r\n    const onEmojiClick = (event, emojiObject) => {\r\n        setinput(input+emojiObject.emoji)\r\n      };\r\n\r\n    const emoji = () => {\r\n        setState(!state);\r\n    }\r\n\r\n    const showmenu = () => {\r\n        setmenu(!menu)\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat-header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n                <div className=\"chat-headerInfo\">\r\n                    <h3>{Roomname}</h3>\r\n                    <p>Last Seena at {new Date(\r\n                            Messages[Messages.length - 1]?.\r\n                            time?.toDate()\r\n                        ).toUTCString()} </p>\r\n                </div>\r\n                <div className=\"chat-headerRight\">\r\n                        <IconButton>\r\n                                <SearchOutlinedIcon />\r\n                        </IconButton>\r\n                        <IconButton>\r\n                                    <AttachFileIcon onClick={showmenu} />\r\n                        </IconButton>\r\n                        {menu ? (\r\n                            <Dropdown1 />\r\n                        )\r\n                        :\r\n                        (null)\r\n                    }\r\n                        <IconButton>\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat-body\">\r\n                {Messages.map(message => (\r\n                    <p className={`chat-message ${message.name === user.displayName && 'chat-receiver'}`}>\r\n                        <span className=\"chat-name\">{message.name}</span>\r\n                        {(message.message.startsWith(\"data:image\")) ?\r\n                        <div className=\"chat-pic\">\r\n                            <img src={message.message}></img>\r\n                        </div>\r\n                        :\r\n                        (message.message)      \r\n                        }\r\n                        <span className=\"chat-time\">\r\n                            {new Date(message.time?.toDate()).toUTCString()}\r\n                        </span>\r\n                    </p>\r\n                ))}\r\n                <div ref={messagesEndRef} >\r\n                    {state && <Picker onEmojiClick={onEmojiClick} />}       \r\n                </div>    \r\n                  \r\n            </div>\r\n                <div className=\"chat-footer\">\r\n                <IconButton>\r\n                    <EmojiEmotionsOutlinedIcon onClick={emoji} />\r\n                </IconButton>    \r\n                    <form>\r\n                        <input type=\"text\" placeholder=\"Type a Message\" value={input} onChange={(e) => setinput(e.target.value)} />\r\n                        <button type=\"submit\" onClick={sendMessage}>Send</button>    \r\n                    </form>\r\n\r\n                    <MicOutlinedIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","\r\nfunction DefaultChat() {\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"default-body\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/150px-WhatsApp.svg.png\" />\r\n            <div className=\"Text\">\r\n                    <h1>Sign into to Whatsapp</h1>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DefaultChat\r\n","export const initialState = {\r\n    user: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state,action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n        return {\r\n            ...state,\r\n            user: action.user,\r\n\r\n        };\r\n    default:\r\n        return state;    \r\n    }        \r\n};\r\n\r\nexport default reducer;","import {auth,provider} from '../firebase' \r\nimport { actionTypes } from '../reduser';\r\nimport { useStateValue } from '../StateProvide';\r\nimport {Button} from \"@material-ui/core\";\r\nfunction Login() {\r\n    const [{},dispatch] = useStateValue();\r\n    const signIn = () => {\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                })\r\n            })\r\n            .catch((error) => alert(error.message));\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login-container\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/150px-WhatsApp.svg.png\" alt=\"\" />\r\n                <div className=\"login-next\">\r\n                    <h1>Sign into to Whatsapp</h1>\r\n                </div>\r\n                <Button onClick={signIn}>Sign In with Google</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import './App.css';\nimport Sidebar from './components/Sidebar'\nimport Chat from './components/Chat'\nimport DefaultChat from './components/DefaultChat'\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom'\nimport {useState} from \"react\";\nimport Login from './components/Login';\nimport {useStateValue} from \"./StateProvide\" \n\n\nfunction App() {\n  const [{user},dispatch] = useStateValue();  \n  return (\n    <div className=\"App\">\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app__body\">\n          <Router>\n          <Sidebar />\n          <Switch>\n            <Route path=\"/rooms/:roomId\">\n              <Chat />\n            </Route>\n            <Route path=\"/\">\n              <DefaultChat />\n            </Route>\n          </Switch>\n        </Router>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer,{initialState} from \"./reduser\";\nimport { StateProvider } from \"./StateProvide\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}